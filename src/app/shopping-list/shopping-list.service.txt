// import { Subject, BehaviorSubject } from 'rxjs';

// import { Ingredient } from '../shared/ingredient.model';

// export class ShoppingListService {
//   ingredientsChanged = new Subject<Ingredient[]>();
//   singleIngredient = new Subject<Ingredient>();
//   editMode = new BehaviorSubject<{ status: boolean; index: number | null }>({
//     status: false,
//     index: null,
//   });
//   private ingredients: Ingredient[] = [
//     new Ingredient('Apples', 5),
//     new Ingredient('Tomatoes', 10),
//   ];

//   getIngredients() {
//     return this.ingredients.slice();
//   }

//   addIngredient(ingredient: Ingredient) {
//     this.ingredients.push(ingredient);
//     this.ingredientsChanged.next(this.ingredients.slice());
//   }
//   getSingleIngredient(index: number) {
//     this.singleIngredient.next(this.ingredients[index]);
//   }
//   addIngredients(ingredients: Ingredient[]) {
//     // for (let ingredient of ingredients) {
//     //   this.addIngredient(ingredient);
//     // }
//     this.ingredients.push(...ingredients);
//     this.ingredientsChanged.next(this.ingredients.slice());
//   }
//   editIngredient(index: number, newValue: Ingredient) {
//     this.ingredients.splice(index, 1, newValue);
//     // console.log(this.ingredients);
//     this.ingredientsChanged.next(this.ingredients.slice());
//   }
//   deleteIngredient(index: number) {
//     this.ingredients.splice(index, 1);
//     this.ingredientsChanged.next(this.ingredients.slice());
//   }
// }
